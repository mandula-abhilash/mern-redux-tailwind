[{"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\index.js":"1","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\App.js":"2","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\store.js":"3","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\RegisterScreen.js":"4","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\DashboardScreen.js":"5","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\LoginScreen.js":"6","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\reducers\\userReducers.js":"7","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Message.js":"8","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Header.js":"9","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Loader.js":"10","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\actions\\userActions.js":"11","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\constants\\userConstants.js":"12","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\ProfileScreen.js":"13","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\UserListScreen.js":"14","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\TestScreen.js":"15","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Footer.js":"16","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\ActivateScreen.js":"17"},{"size":306,"mtime":1612151885434,"results":"18","hashOfConfig":"19"},{"size":1151,"mtime":1617178507550,"results":"20","hashOfConfig":"19"},{"size":1088,"mtime":1616802222404,"results":"21","hashOfConfig":"19"},{"size":11138,"mtime":1617173796283,"results":"22","hashOfConfig":"19"},{"size":4586,"mtime":1617190444003,"results":"23","hashOfConfig":"19"},{"size":3999,"mtime":1616806036460,"results":"24","hashOfConfig":"19"},{"size":3860,"mtime":1617108085206,"results":"25","hashOfConfig":"19"},{"size":437,"mtime":1617039727668,"results":"26","hashOfConfig":"19"},{"size":12481,"mtime":1617200509432,"results":"27","hashOfConfig":"19"},{"size":1691,"mtime":1612151885417,"results":"28","hashOfConfig":"19"},{"size":8119,"mtime":1617173771672,"results":"29","hashOfConfig":"19"},{"size":1715,"mtime":1617108109157,"results":"30","hashOfConfig":"19"},{"size":7242,"mtime":1617175822094,"results":"31","hashOfConfig":"19"},{"size":1096,"mtime":1613395981759,"results":"32","hashOfConfig":"19"},{"size":6176,"mtime":1617190936659,"results":"33","hashOfConfig":"19"},{"size":1888,"mtime":1617178636054,"results":"34","hashOfConfig":"19"},{"size":7004,"mtime":1617173936374,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1lbz1fu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\index.js",[],["77","78"],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\App.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\store.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\RegisterScreen.js",["79","80"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { register, registerReset } from \"../actions/userActions\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [accessKey, setAccessKey] = useState(\"\");\r\n  const [tooltipStatus, setTooltipStatus] = useState(0);\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  // const [formErrors, setFormErrors] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  let { loading, error, message } = userRegister;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const userInfo = userLogin.userInfo;\r\n\r\n  const redirect = location.search\r\n    ? location.search.split(\"=\")[1]\r\n    : \"/dashboard\";\r\n\r\n  useEffect(() => {\r\n    console.log(\"Re redering\");\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n    // }, [history, formErrors, userInfo, redirect]);\r\n  }, [history, userInfo, redirect]);\r\n\r\n  useEffect(() => {\r\n    dispatch(registerReset());\r\n  }, [redirect]);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setAccessKey(\"\");\r\n\r\n      const resetMessageTimer = setTimeout(() => {\r\n        dispatch(registerReset());\r\n        history.push(\"/\");\r\n      }, 10000);\r\n\r\n      return () => clearTimeout(resetMessageTimer);\r\n    } else {\r\n      setName(name);\r\n      setEmail(email);\r\n      setAccessKey(accessKey);\r\n    }\r\n  }, [name, email, accessKey, message, error, registerReset]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // if (password !== confirmPassword) {\r\n    //   setFormErrors(\"Passwords do not match\");\r\n    // } else {\r\n    //   setFormErrors(null);\r\n    //   dispatch(register(name, email, password, accessKey));\r\n    // }\r\n\r\n    dispatch(register(name, email, accessKey));\r\n  };\r\n\r\n  return (\r\n    <section className=\"bg-white flex-grow\">\r\n      <div className=\"mx-auto flex justify-center md:items-center relative\">\r\n        <form\r\n          onSubmit={submitHandler}\r\n          className=\"w-full sm:w-4/6 lg:w-6/12 xl:w-8/12 text-gray-600 mb-12 sm:mb-0 my-10 sm:my-6 px-6\"\r\n        >\r\n          {/* <div className=\"px-2 flex flex-col items-center justify-center mt-8 sm:mt-0\">\r\n            <h2 className=\"text-4xl leading-tight pt-8\">The North</h2>\r\n          </div> */}\r\n          <div className=\"pt-16 px-2 flex flex-col items-center justify-center\">\r\n            <h3 className=\"text-xl sm:text-2xl xl:text-xl font-bold leading-tight uppercase\">\r\n              Create New Account\r\n            </h3>\r\n            {/* {formErrors && <Message variant=\"danger\">{formErrors}</Message>} */}\r\n            {message && <Message variant=\"info\">{message.message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n          </div>\r\n          <div className=\"mt-12 mx-auto w-full xl:w-9/12 2xl:w-6/12 px-2 sm:px-6 uppercase\">\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"name\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Name\r\n              </label>\r\n              <input\r\n                name=\"name\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={name}\r\n                autoComplete=\"off\"\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                name=\"email\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                autoComplete=\"off\"\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                // htmlFor=\"accessKey\"\r\n                className=\"flex justify-between text-xs font-semibold leading-tight\"\r\n              >\r\n                Access Key\r\n                {/*Code Block for indigo tooltip starts*/}\r\n                <div\r\n                  className=\"relative\"\r\n                  onMouseEnter={() => setTooltipStatus(2)}\r\n                  onMouseLeave={() => setTooltipStatus(0)}\r\n                >\r\n                  {tooltipStatus === 2 && (\r\n                    <div\r\n                      role=\"tooltip\"\r\n                      className=\"z-20 transition duration-150 ease-in-out bottom-0 mb-8 right-0 shadow-lg pt-4 pr-2 pl-3 pb-5 bg-indigo-700 text-gray-600 rounded-bl-md rounded-t-md w-56 md:w-60 absolute\"\r\n                    >\r\n                      <svg\r\n                        className=\"absolute bottom-0 -mb-2 right-2\"\r\n                        width=\"16px\"\r\n                        height=\"8px\"\r\n                        viewBox=\"0 0 16 8\"\r\n                        version=\"1.1\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                      >\r\n                        <g\r\n                          id=\"Page-1\"\r\n                          stroke=\"none\"\r\n                          strokeWidth={1}\r\n                          fill=\"none\"\r\n                          fillRule=\"evenodd\"\r\n                        >\r\n                          <g\r\n                            id=\"Tooltips-\"\r\n                            transform=\"translate(-84.000000, -203.000000)\"\r\n                            fill=\"#4338ca\"\r\n                          >\r\n                            <g\r\n                              id=\"Group-3-Copy\"\r\n                              transform=\"translate(76.000000, 145.000000)\"\r\n                            >\r\n                              <polygon\r\n                                className=\"shadow\"\r\n                                id=\"Triangle\"\r\n                                transform=\"translate(16.000000, 62.000000) rotate(-180.000000) translate(-16.000000, -62.000000) \"\r\n                                points=\"16 58 24 66 8 66\"\r\n                              />\r\n                            </g>\r\n                          </g>\r\n                        </g>\r\n                      </svg>\r\n                      <p className=\"text-xs text-white leading-4 normal-case\">\r\n                        Contact admin to get the access key\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"ml-2 cursor-pointer\">\r\n                    <svg\r\n                      aria-haspopup=\"true\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"icon icon-tabler icon-tabler-info-circle\"\r\n                      width={16}\r\n                      height={16}\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth=\"1.5\"\r\n                      stroke=\"#A0AEC0\"\r\n                      fill=\"none\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                      <circle cx={12} cy={12} r={9} />\r\n                      <line x1={12} y1={8} x2=\"12.01\" y2={8} />\r\n                      <polyline points=\"11 12 12 12 12 16 13 16\" />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n                {/*Code Block for indigo tooltip ends*/}\r\n              </label>\r\n              <input\r\n                name=\"accessKey\"\r\n                id=\"accessKey\"\r\n                type=\"password\"\r\n                value={accessKey}\r\n                autoComplete=\"new-password\"\r\n                onChange={(e) => setAccessKey(e.target.value)}\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n              />\r\n            </div>\r\n            {/* <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Password\r\n              </label>\r\n              <input\r\n                name=\"password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                autoComplete=\"new-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"confirmPassword\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                autoComplete=\"new-password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n              />\r\n            </div> */}\r\n          </div>\r\n\r\n          <div className=\"px-2 py-6 mb-16 sm:mb-56 md:mb-16 sm:px-6 mx-auto w-full md:w-4/6 lg:w-8/12 xl:w-6/12\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"focus:outline-none w-full bg-indigo-700 transition duration-150 ease-in-out hover:bg-indigo-600 rounded text-white px-8 py-3 text-sm mt-6\"\r\n            >\r\n              Register\r\n            </button>\r\n            <p className=\"mt-16 text-xs text-center\">\r\n              Already Have An Account?\r\n              <Link\r\n                className=\"text-indigo-600 ml-3 font-semibold\"\r\n                to={redirect ? `/?redirect=${redirect}` : \"/\"}\r\n              >\r\n                Login\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\DashboardScreen.js",["81","82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Header from \"../components/Header\";\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [activeStatus, setActiveStatus] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"flex-grow\">\r\n      <Header />\r\n      {/* Page title starts */}\r\n      <div className=\"relative z-10 bg-gray-800 pt-8 pb-16\">\r\n        <div className=\"container px-6 mx-auto flex flex-col lg:flex-row items-start lg:items-center justify-between\"></div>\r\n      </div>\r\n      {/* Page title ends */}\r\n      <div className=\"bg-gray-200 min-h-screen pb-10\">\r\n        <div className=\"container px-6 mx-auto\">\r\n          <div className=\"relative z-10 w-full\">\r\n            <div className=\"w-full -mt-8 h-auto\">\r\n              <div className=\"w-full h-auto lg:h-20 mb-6 rounded shadow bg-white\">\r\n                <div className=\"lg:hidden bg-white w-full relative rounded\">\r\n                  <div className=\"absolute inset-0 m-auto mr-4 z-0 w-6 h-6\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"icon icon-tabler icon-tabler-selector\"\r\n                      width={24}\r\n                      height={24}\r\n                      viewBox=\"0 0 24 24\"\r\n                      strokeWidth=\"1.5\"\r\n                      stroke=\"#A0AEC0\"\r\n                      fill=\"none\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                      <polyline points=\"8 9 12 5 16 9\" />\r\n                      <polyline points=\"16 15 12 19 8 15\" />\r\n                    </svg>\r\n                  </div>\r\n                  <select\r\n                    aria-label=\"Selected tab\"\r\n                    className=\"form-select block w-full p-3 border border-gray-300 rounded text-gray-600 appearance-none bg-transparent relative z-10\"\r\n                  >\r\n                    <option selected className=\"text-sm text-gray-600\">\r\n                      Councils\r\n                    </option>\r\n                    <option className=\"text-sm text-gray-600\">Reports</option>\r\n                    <option className=\"text-sm text-gray-600\">\r\n                      Registrations\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <ul className=\"hidden lg:flex flex-row items-center h-full\">\r\n                  <li\r\n                    onClick={() => setActiveStatus(1)}\r\n                    className={\r\n                      activeStatus == 1\r\n                        ? \"ml-12 my-2 lg:my-0 cursor-pointer rounded text-base bg-indigo-100 text-indigo-700 px-4 py-2 shadow-md\"\r\n                        : \"ml-12 my-2 lg:my-0 cursor-pointer rounded text-base text-gray-600 px-4 py-2\"\r\n                    }\r\n                  >\r\n                    Councils\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setActiveStatus(2)}\r\n                    className={\r\n                      activeStatus == 2\r\n                        ? \"ml-12 my-2 lg:my-0 cursor-pointer rounded text-base bg-indigo-100 text-indigo-700 px-4 py-2 shadow-md\"\r\n                        : \"ml-12 my-2 lg:my-0 cursor-pointer rounded text-base text-gray-600 px-4 py-2\"\r\n                    }\r\n                  >\r\n                    Reports\r\n                  </li>\r\n                  <li\r\n                    onClick={() => setActiveStatus(3)}\r\n                    className={\r\n                      activeStatus == 3\r\n                        ? \"ml-12 my-2 lg:my-0 cursor-pointer rounded text-base bg-indigo-100 text-indigo-700 px-4 py-2 shadow-md\"\r\n                        : \"ml-12 my-2 lg:my-0 cursor-pointer rounded text-base text-gray-600 px-4 py-2\"\r\n                    }\r\n                  >\r\n                    Registrations\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"container mx-auto h-screen min-h-screen\">\r\n                <div className=\"bg-white w-full h-full rounded shadow\">\r\n                  {/* Place your content here */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Message.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Header.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Loader.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\actions\\userActions.js",["84","85"],"import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_REGISTER_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  document.location.href = \"/\";\r\n};\r\n\r\nexport const registerReset = () => (dispatch) => {\r\n  dispatch({ type: USER_REGISTER_RESET });\r\n  // document.location.href = \"/\";\r\n};\r\n\r\nexport const register = (name, email, accessKey) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, accessKey },\r\n      config\r\n    );\r\n\r\n    console.log({ data });\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // dispatch({\r\n    //   type: USER_LOGIN_SUCCESS,\r\n    //   payload: data,\r\n    // });\r\n\r\n    // localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    // console.log(error.response.data.message);\r\n    // console.log(error.message);\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const activateAccount = (token, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/account-activation\",\r\n      { token, password },\r\n      config\r\n    );\r\n\r\n    console.log({ data });\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    // console.log(error.response.data.message);\r\n    // console.log(error.message);\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\constants\\userConstants.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\ProfileScreen.js",["86","87"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (!user.name) {\r\n        console.log(\"Use Effect 1\");\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [userInfo, success, user]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Use Effect 2\");\r\n  }, [getUserDetails]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else if (!password) {\r\n      setMessage(\"Please enter your password\");\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      dispatch(getUserDetails(\"profile\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"bg-white flex-grow\">\r\n        <div className=\"container w-11/12 md:w-10/12 mx-auto my-16 h-auto rounded shadow-2xl\">\r\n          <div className=\"mt-8 p-6 bg-gray-100 mx-auto flex items-center justify-between rounded-tl-lg rounded-tr-lg\">\r\n            <h4 className=\"text-sm md:text-lg mx-2 md:mx-8 font-bold leading-tight text-gray-800 uppercase\">\r\n              Edit Profile\r\n            </h4>\r\n            <div className=\"mt-0\">\r\n              <Link\r\n                to=\"/\"\r\n                className=\"mx-8 bg-white shadow-md focus:outline-none transition duration-150 ease-in-out rounded hover:bg-indigo-700 hover:text-white text-indigo-700 px-5 py-2 text-sm\"\r\n              >\r\n                Back\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mx-auto flex bg-white justify-center md:items-center relative rounded-bl-lg rounded-br-lg\">\r\n            <form\r\n              onSubmit={submitHandler}\r\n              className=\"w-full sm:w-4/6 md:w-4/6 lg:w-5/12 xl:4/12 text-gray-800 mb-12 sm:mb-0 my-10 sm:my-6 px-2 sm:px-0\"\r\n            >\r\n              <div className=\"pt-4 lg:pt-16 px-2 flex flex-col items-center justify-center uppercase\">\r\n                {/* <h3 className=\"text-xl sm:text-2xl xl:text-xl font-bold leading-tight\">\r\n                User Profile\r\n              </h3> */}\r\n                {message && <Message variant=\"danger\">{message}</Message>}\r\n                {success && (\r\n                  <Message variant=\"info\">Profile updated succesfully</Message>\r\n                )}\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n                {loading && <Loader />}\r\n              </div>\r\n              <div className=\"mt-12 w-full px-2 sm:px-6\">\r\n                <div className=\"flex flex-col mt-5\">\r\n                  <label\r\n                    htmlFor=\"name\"\r\n                    className=\"text-md font-semibold leading-tight\"\r\n                  >\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    className=\"h-10 px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-col mt-5\">\r\n                  <label\r\n                    htmlFor=\"email\"\r\n                    className=\"text-md font-semibold leading-tight\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    disabled=\"disabled\"\r\n                    value={email}\r\n                    className=\"h-10 px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow cursor-not-allowed\"\r\n                    // onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-col mt-5\">\r\n                  <label\r\n                    htmlFor=\"password\"\r\n                    className=\"text-md font-semibold fleading-tight\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    autoComplete=\"new-password\"\r\n                    className=\"h-10 px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex flex-col mt-5\">\r\n                  <label\r\n                    htmlFor=\"confirmPassword\"\r\n                    className=\"text-md font-semibold fleading-tight\"\r\n                  >\r\n                    Confirm Password\r\n                  </label>\r\n                  <input\r\n                    name=\"confirmPassword\"\r\n                    id=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={confirmPassword}\r\n                    autoComplete=\"new-password\"\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    className=\"h-10 px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"px-2 py-6 mb-16 sm:mb-56 md:mb-16 sm:px-6\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"focus:outline-none w-full bg-indigo-700 transition duration-150 ease-in-out hover:bg-indigo-600 rounded text-white px-8 py-3 text-sm mt-6\"\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\TestScreen.js",["88","89","90"],"import React, { useState } from \"react\";\r\nfunction Index() {\r\n  const [show, setshow] = useState(false);\r\n  const [show1, setshow1] = useState(false);\r\n  return (\r\n    <>\r\n      <div className=\"px-6 flex flex-col items-start sm:items-center sm:flex-row flex-wrap\">\r\n        {/* Code block starts */}\r\n        <div\r\n          className=\"flex items-center mb-4 lg:mb-0 mr-10 relative cursor-pointer\"\r\n          onClick={() => setshow(!show)}\r\n        >\r\n          {show && (\r\n            <ul className=\"p-2 w-40 border-r bg-white absolute rounded z-40 right-0 shadow mt-16  top-0\">\r\n              <li className=\"cursor-pointer text-gray-600 dark:text-gray-400 text-sm leading-3 tracking-normal py-2 hover:text-indigo-700 focus:text-indigo-700 focus:outline-none\">\r\n                <div className=\"flex items-center\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"icon icon-tabler icon-tabler-user\"\r\n                    width={20}\r\n                    height={20}\r\n                    viewBox=\"0 0 24 24\"\r\n                    strokeWidth=\"1.5\"\r\n                    stroke=\"currentColor\"\r\n                    fill=\"none\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                    <circle cx={12} cy={7} r={4} />\r\n                    <path d=\"M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2\" />\r\n                  </svg>\r\n                  <span className=\"ml-2\">My Profile</span>\r\n                </div>\r\n              </li>\r\n              <li className=\"cursor-pointer text-gray-600 dark:text-gray-400 text-sm leading-3 tracking-normal mt-2 py-2 hover:text-indigo-700 focus:text-indigo-700 focus:outline-none flex items-center\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"icon icon-tabler icon-tabler-help\"\r\n                  width={20}\r\n                  height={20}\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                  <circle cx={12} cy={12} r={9} />\r\n                  <line x1={12} y1={17} x2={12} y2=\"17.01\" />\r\n                  <path d=\"M12 13.5a1.5 1.5 0 0 1 1 -1.5a2.6 2.6 0 1 0 -3 -4\" />\r\n                </svg>\r\n                <span className=\"ml-2\">Help Center</span>\r\n              </li>\r\n              <li className=\"cursor-pointer text-gray-600 dark:text-gray-400 text-sm leading-3 tracking-normal mt-2 py-2 hover:text-indigo-700 flex items-center focus:text-indigo-700 focus:outline-none\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"icon icon-tabler icon-tabler-settings\"\r\n                  width={20}\r\n                  height={20}\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                  <path d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\r\n                  <circle cx={12} cy={12} r={3} />\r\n                </svg>\r\n                <span className=\"ml-2\">Account Settings</span>\r\n              </li>\r\n            </ul>\r\n          )}\r\n          <div className=\"w-12 h-12 bg-cover rounded mr-3\">\r\n            <img\r\n              src=\"https://tuk-cdn.s3.amazonaws.com/assets/components/avatars/a_1.png\"\r\n              className=\"rounded h-full w-full overflow-hidden shadow\"\r\n              alt\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center\">\r\n            <p className=\"text-gray-800 dark:text-gray-100 text-base font-medium\">\r\n              Steve Doe\r\n            </p>\r\n            <div\r\n              className=\"ml-2 cursor-pointer text-gray-600 dark:text-gray-400\"\r\n              onClick={() => setshow(!show)}\r\n            >\r\n              {show ? (\r\n                <svg\r\n                  id=\"upIcon1\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"icon icon-tabler icon-tabler-chevron-up\"\r\n                  width={20}\r\n                  height={20}\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                  <polyline points=\"6 15 12 9 18 15\" />\r\n                </svg>\r\n              ) : (\r\n                <svg\r\n                  id=\"downIcon1\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  className=\"icon icon-tabler icon-tabler-chevron-down\"\r\n                  width={20}\r\n                  height={20}\r\n                  viewBox=\"0 0 24 24\"\r\n                  strokeWidth=\"1.5\"\r\n                  stroke=\"currentColor\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                >\r\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" />\r\n                  <polyline points=\"6 9 12 15 18 9\" />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Code block ends */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Index;\r\n","D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\components\\Footer.js",[],"D:\\Work\\Personal\\Templates\\mern-redux-tailwind\\frontend\\src\\screens\\ActivateScreen.js",["91"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { activateAccount } from \"../actions/userActions\";\r\n\r\nconst ActivateScreen = ({ location, history, match }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [formErrors, setFormErrors] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  let { loading, error, message, userInfo } = userRegister;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const userLoginInfo = userLogin.userInfo;\r\n\r\n  const redirect = location.search\r\n    ? location.search.split(\"=\")[1]\r\n    : \"/dashboard\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo || userLoginInfo) {\r\n      history.push(redirect);\r\n    } else {\r\n      let tokenReceived = match.params.token;\r\n      if (tokenReceived) {\r\n        let { name, email } = jwt.decode(tokenReceived);\r\n        console.log(name + \" : \" + email + \" : \" + tokenReceived);\r\n        setToken(tokenReceived);\r\n        setName(name);\r\n        setEmail(email);\r\n      }\r\n    }\r\n  }, [history, formErrors, userInfo, userLoginInfo, redirect]);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n    } else {\r\n      setPassword(password);\r\n      setConfirmPassword(confirmPassword);\r\n    }\r\n  }, [name, email, password, confirmPassword, message, error, userRegister]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setFormErrors(\"Passwords do not match\");\r\n    } else {\r\n      setFormErrors(null);\r\n      dispatch(activateAccount(token, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"bg-white flex-grow\">\r\n      <div className=\"mx-auto flex justify-center md:items-center relative\">\r\n        <form\r\n          onSubmit={submitHandler}\r\n          className=\"w-full sm:w-4/6 lg:w-6/12 xl:w-8/12 text-gray-600 mb-12 sm:mb-0 my-10 sm:my-6 px-6\"\r\n        >\r\n          {/* <div className=\"px-2 flex flex-col items-center justify-center mt-8 sm:mt-0\">\r\n            <h2 className=\"text-4xl leading-tight pt-8\">The North</h2>\r\n          </div> */}\r\n          <div className=\"pt-16 px-2 flex flex-col items-center justify-center\">\r\n            <h3 className=\"text-xl sm:text-2xl xl:text-xl font-bold leading-tight uppercase\">\r\n              Activate Your Account\r\n            </h3>\r\n            {formErrors && <Message variant=\"danger\">{formErrors}</Message>}\r\n            {message && <Message variant=\"info\">{message.message}</Message>}\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {loading && <Loader />}\r\n          </div>\r\n          <div className=\"mt-12 mx-auto w-full xl:w-9/12 2xl:w-6/12 px-2 sm:px-6 uppercase\">\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"name\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Name\r\n              </label>\r\n              <input\r\n                name=\"name\"\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={name}\r\n                disabled=\"disabled\"\r\n                autoComplete=\"off\"\r\n                className=\"h-10 bg-white focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow cursor-not-allowed\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                name=\"email\"\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                disabled=\"disabled\"\r\n                autoComplete=\"off\"\r\n                className=\"h-10 bg-white focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow cursor-not-allowed\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"password\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Password\r\n              </label>\r\n              <input\r\n                name=\"password\"\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                autoComplete=\"new-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n              />\r\n            </div>\r\n            <div className=\"flex flex-col mt-8\">\r\n              <label\r\n                htmlFor=\"confirmPassword\"\r\n                className=\"text-xs font-semibold leading-tight\"\r\n              >\r\n                Confirm Password\r\n              </label>\r\n              <input\r\n                name=\"confirmPassword\"\r\n                id=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                autoComplete=\"new-password\"\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className=\"h-10 bg-gray-50 focus:bg-white px-2 w-full rounded mt-2 text-gray-600 focus:outline-none focus:border focus:border-indigo-700 border-gray-300 border shadow\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"px-2 py-6 mb-16 sm:mb-56 md:mb-16 sm:px-6 mx-auto w-full md:w-4/6 lg:w-8/12 xl:w-6/12\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"focus:outline-none w-full bg-indigo-700 transition duration-150 ease-in-out hover:bg-indigo-600 rounded text-white px-8 py-3 text-sm mt-6\"\r\n            >\r\n              Activate\r\n            </button>\r\n            <p className=\"mt-16 text-xs text-center\">\r\n              Not registered yet?\r\n              <Link\r\n                className=\"text-indigo-600 ml-3 font-semibold\"\r\n                to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n              >\r\n                Register\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ActivateScreen;\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":39,"column":6,"nodeType":"98","endLine":39,"endColumn":16,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":58,"column":6,"nodeType":"98","endLine":58,"endColumn":61,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":68,"column":36,"nodeType":"104","messageId":"105","endLine":68,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":78,"column":36,"nodeType":"104","messageId":"105","endLine":78,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":88,"column":36,"nodeType":"104","messageId":"105","endLine":88,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":17,"column":3,"nodeType":"108","messageId":"109","endLine":17,"endColumn":28},{"ruleId":"106","severity":1,"message":"110","line":28,"column":3,"nodeType":"108","messageId":"109","endLine":28,"endColumn":20},{"ruleId":"96","severity":1,"message":"111","line":40,"column":6,"nodeType":"98","endLine":40,"endColumn":31,"suggestions":"112"},{"ruleId":"96","severity":1,"message":"113","line":44,"column":6,"nodeType":"98","endLine":44,"endColumn":22,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":4,"column":10,"nodeType":"108","messageId":"109","endLine":4,"endColumn":15},{"ruleId":"106","severity":1,"message":"116","line":4,"column":17,"nodeType":"108","messageId":"109","endLine":4,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":78,"column":13,"nodeType":"119","endLine":82,"endColumn":15},{"ruleId":"96","severity":1,"message":"120","line":42,"column":6,"nodeType":"98","endLine":42,"endColumn":62,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array. Outer scope values like 'registerReset' aren't valid dependencies because mutating them doesn't re-render the component.",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'USER_UPDATE_PROFILE_RESET' is defined but never used.","Identifier","unusedVar","'USER_UPDATE_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has an unnecessary dependency: 'getUserDetails'. Either exclude it or remove the dependency array. Outer scope values like 'getUserDetails' aren't valid dependencies because mutating them doesn't re-render the component.",["127"],"'show1' is assigned a value but never used.","'setshow1' is assigned a value but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'match.params.token'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [dispatch, redirect]",{"range":"139","text":"140"},"Update the dependencies array to be: [name, email, accessKey, message, error, dispatch, history]",{"range":"141","text":"142"},"Update the dependencies array to be: [userInfo, success, user, history, dispatch]",{"range":"143","text":"144"},"Update the dependencies array to be: []",{"range":"145","text":"146"},"Update the dependencies array to be: [history, formErrors, userInfo, userLoginInfo, redirect, match.params.token]",{"range":"147","text":"148"},[1359,1369],"[dispatch, redirect]",[1777,1832],"[name, email, accessKey, message, error, dispatch, history]",[1330,1355],"[userInfo, success, user, history, dispatch]",[1421,1437],"[]",[1475,1531],"[history, formErrors, userInfo, userLoginInfo, redirect, match.params.token]"]